{{- if and .Values.mongodb.install .Values.mongodb.persistent }}
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: "{{ .Values.appName }}-mongodb"
  labels:
    app: "{{ .Values.appName }}"
    container: mongodb
    group: microcks
    {{- include "microcks-common-labels" . | nindent 4 }}
  annotations:
    {{- include "microcks-common-annotations" . | nindent 4 }}
      {{- with .Values.mongodb.pvcAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.mongodb.volumeSize }}
  {{- if hasKey .Values.mongodb "storageClassName" }}
  storageClassName: {{ .Values.mongodb.storageClassName }}
  {{- end }}
{{- end }}
{{- if and .Values.keycloak.enabled .Values.keycloak.install .Values.keycloak.persistent }}
---
#apiVersion: v1
#kind: PersistentVolume
#metadata:
#  name: "pv-{{ .Values.appName }}-keycloak-postgresql"
#spec:
#  capacity:
#    storage: {{ .Values.keycloak.volumeSize }}
#  local:
#    path: /mnt/local-storage
#  accessModes:
#  - ReadWriteOnce
#  claimRef:
#    kind: PersistentVolumeClaim
#    namespace: microcks
#    name: name: "{{ .Values.appName }}-keycloak-postgresql"
#  persistentVolumeReclaimPolicy: Delete
#  {{- if hasKey .Values.keycloak "storageClassName" }}
#  storageClassName: {{ .Values.keycloak.storageClassName }}
#  volumeMode: Filesystem
#  nodeAffinity:
#    required:
#      nodeSelectorTerms:
#      - matchExpressions:
#        - key: kubernetes.io/hostname
#          operator: In
#          values:
#          - ips-dev3
#  {{- end }}
#---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: "{{ .Values.appName }}-keycloak-postgresql"
  labels:
    app: "{{ .Values.appName }}"
    container: keycloak-postgresql
    group: microcks
    {{- include "microcks-common-labels" . | nindent 4 }}
  annotations:
    {{- include "microcks-common-annotations" . | nindent 4 }}
    {{- with .Values.keycloak.pvcAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.keycloak.volumeSize }}
  {{- if hasKey .Values.keycloak "storageClassName" }}
  storageClassName: {{ .Values.keycloak.storageClassName }}
  volumeName: "pv-{{ .Values.appName }}-keycloak-postgresql"
  volumeMode: Filesystem 
  {{- end }}
{{- end }}
